<!-- An ANT build file for 'orsonpdf' -->

<!-- Written by David Gilbert. -->

<!-- Tested recently with Ant 1.8.2 -->

<!-- This script will create temporary directories ../build and -->
<!-- ../distribution, as working areas.  A ../javadoc directory will -->
<!-- be created for the Javadoc HTML pages. -->

<project name="orsonpdf" default="all" basedir="..">

    <!-- Initialisation. -->
    <target name="initialise" description="Initialise required settings.">
        <tstamp />
        <property name="orsonpdf.name" value="orsonpdf" />
        <property name="orsonpdf.version" value="1.5" />
        <property name="jfreechart.name" value="jfreechart" />
        <property name="jfreechart.version" value="1.0.17" />
        <property name="jcommon.name" value="jcommon" />
        <property name="jcommon.version" value="1.0.21" />
        <property name="builddir" value="${basedir}/build" />
        <property name="src.version" value="1.6"/>
        <property name="target.version" value="1.6"/>
        <path id="build.classpath">
            <fileset dir="${basedir}/lib/">
                <include name="${jcommon.name}-${jcommon.version}.jar"/>
                <include name="${jfreechart.name}-${jfreechart.version}.jar"/>
            </fileset>
        </path>
    </target>

    <!-- Compile the classes -->
    <target name="compile" depends="initialise"
            description="Compile the 'orsonpdf' source code.">

        <!-- create a temp build directory -->
        <mkdir dir="${basedir}/build" />

        <!-- compile the source -->
        <javac srcdir="${basedir}/src/main/java"
               excludes="com/orsonpdf/demo/**"
               destdir="${basedir}/build"
               debug="on"
               deprecation="true"
               source="${src.version}"
               target="${target.version}">
            <classpath refid="build.classpath" />
        </javac>

        <!-- make the jar -->
        <jar jarfile="${basedir}/lib/${orsonpdf.name}-${orsonpdf.version}.jar"
             basedir="${basedir}/build" >
            <manifest>
                <attribute name="Specification-Title" value="${orsonpdf.name}" />
                <attribute name="Specification-Version" value="${orsonpdf.version}" />
                <attribute name="Specification-Vendor" value="Object Refinery Limited" />
                <attribute name="Implementation-Title" value="${orsonpdf.name}" />
                <attribute name="Implementation-Version" value="${orsonpdf.version}" />
                <attribute name="Implementation-Vendor" value="Object Refinery Limited" />
            </manifest>
        </jar>

        <!-- delete the temp directory -->
        <delete dir="${basedir}/build" />

    </target>

    <!-- Generate the OrsonPDF API HTML pages -->
    <target name="javadoc"
            description="Generate the Javadoc HTML pages."
            depends="initialise">
        <delete dir="${basedir}/javadoc" />
        <mkdir dir="${basedir}/javadoc" />
        <javadoc destdir="${basedir}/javadoc"
                 windowtitle="OrsonPDF version ${orsonpdf.version}"
                 overview="${basedir}/src/main/java/overview.html"
                 use="yes"
                 linksource="no"
                 splitindex="yes">
            <classpath refid="build.classpath" />
            <packageset dir="${basedir}/src/main/java"
               excludes="com/orsonpdf/demo" >
            </packageset>
        </javadoc>
    </target>

    <!-- Create zip file containing the API HTML pages. -->
    <target name="zip-javadocs"
            description="Create ZIP file containing Javadoc HTML pages."
            depends="javadoc">
        <!-- make the zip file -->
        <zip zipfile="${basedir}/${orsonpdf.name}-${orsonpdf.version}-javadocs.zip">
             <zipfileset dir="${basedir}/javadoc"
                         prefix="${orsonpdf.name}-${orsonpdf.version}-javadocs" />
        </zip>
    </target>


    <!-- Fill the 'distribution' directory. -->
    <target name="fill-distribution" depends="compile">

        <!-- delete the temporary distribution directory, if there is one -->
        <delete dir="${basedir}/distribution" />

        <!-- make a temporary distribution directory -->
        <mkdir dir="${basedir}/distribution" />

        <!-- copy across README  -->
        <copy file="${basedir}/README.md" tofile="${basedir}/distribution/README.md" />

        <!-- copy across runtime jar file -->
        <copy file="${basedir}/lib/${orsonpdf.name}-${orsonpdf.version}.jar" tofile="${basedir}/distribution/${orsonpdf.name}-${orsonpdf.version}.jar" />

        <!-- copy across JFreeChart and JCommon jar files -->
        <copy file="${basedir}/lib/${jfreechart.name}-${jfreechart.version}.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}.jar" />
        <copy file="${basedir}/lib/${jcommon.name}-${jcommon.version}.jar" tofile="${basedir}/distribution/lib/${jcommon.name}-${jcommon.version}.jar" />
        <copy file="${basedir}/lib/license-LGPL.txt" tofile="${basedir}/distribution/lib/license-LGPL.txt" />

        <!-- copy across Ascii85OutputStream license file -->
        <copy file="${basedir}/lib/Ascii85OutputStream-license.txt" tofile="${basedir}/distribution/lib/Ascii85OutputStream-license.txt" />

        <!-- copy across source files -->
        <copy todir="${basedir}/distribution/src">
            <fileset dir="${basedir}/src">
                <exclude name="test/**"/>
            </fileset>
        </copy>

        <!-- copy across Javadoc files -->
        <copy todir="${basedir}/distribution/javadoc">
            <fileset dir="${basedir}/javadoc">
            </fileset>
        </copy>

        <!-- copy across ant build files -->
        <copy file="${basedir}/ant/build.xml" tofile="${basedir}/distribution/ant/build.xml" />

        <!-- convert end-of-line characters in text files -->
        <fixcrlf srcdir="${basedir}/distribution/src"
                 eol="crlf" eof="remove"
                 excludes="**/*.jpg" />
    </target>

    <!-- Make .zip distribution for OrsonPDF -->
    <target name="zip" depends="fill-distribution">

        <!-- make the zip file -->
        <zip zipfile="${basedir}/${orsonpdf.name}-${orsonpdf.version}-src.zip">
             <zipfileset dir="${basedir}/distribution"
                         prefix="${orsonpdf.name}-${orsonpdf.version}" />
        </zip>

    </target>

    <!-- ALL -->
    <target name="all"
            depends="compile,zip-javadocs,zip"
            description="Compiles OrsonPDF, builds the jar files, generates the Javadoc HTML pages and creates distribution file (.zip).">

        <!-- delete the temporary distribution directory -->
        <delete dir="${basedir}/distribution" />
    </target>

</project>
